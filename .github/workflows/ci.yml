name: SSM to SES Python CI
run-name: ${{ github.repository }}-${{ github.actor }}-${{ github.ref }}-ci
on: [push]
env:
  LOG_LEVEL: debug
  PYPROJECT_PATH: ./code_quality/pyproject.toml
  PYTHON_VERSION: "3.13"
jobs:
  python-ruff-lint:
    runs-on: ubuntu-latest
    steps:
      - name: checkout-code
        uses: actions/checkout@v4
      - name: set-up-python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: build-virtual-env
        uses: ./.github/actions/build_virtual_env
      - name: install-lint-dependencies
        run: |
          echo -e "\033[1;32m**** INSTALLING LINT DEPENDENCIES ****\033[0m"
          pip install -r ./code_quality/lint/requirements.txt
      - name: ruff-lint
        run: |
          echo -e "\033[1;32m**** RUNNING RUFF LINT ****\033[0m"
          ruff check --config "${PYPROJECT_PATH}"
  python-unit-test:
    needs:
      - python-ruff-lint
    runs-on: ubuntu-latest
    steps:
      - name: checkout-code
        uses: actions/checkout@v4
      - name: set-up-python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: build-virtual-env
        run: |
          echo -e "\033[1;32m**** BUILDING VIRTUAL ENVIRONMENT ****\033[0m"
          python3 -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
      - name: install-project-dependencies
        run: |
          echo -e "\033[1;32m**** INSTALLING PROJECT DEPENDENCIES ****\033[0m"
          pip install -r ./script/requirements.txt
      - name: install-test-dependencies
        run: |
          echo -e "\033[1;32m**** INSTALLING TEST DEPENDENCIES ****\033[0m"
          pip install -r ./code_quality/tests/requirements/requirements.txt
      - name: run-unit-tests
        run: |
          echo -e "\033[1;32m**** RUNNING UNIT TESTS ****\033[0m"
          coverage run -m pytest -vv code_quality/tests/unit_tests/* --log-cli-level="${LOG_LEVEL}" && coverage report --omit "code_quality/**/*" --rcfile "${PYPROJECT_PATH}" -m
  python-integration-test:
    needs:
      - python-unit-test
    runs-on: ubuntu-latest
    steps:
      - name: checkout-code
        uses: actions/checkout@v4
      - name: set-up-python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: build-virtual-env
        run: |
          echo -e "\033[1;32m**** BUILDING VIRTUAL ENVIRONMENT ****\033[0m"
          python3 -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
      - name: install-project-dependencies
        run: |
          echo -e "\033[1;32m**** INSTALLING PROJECT DEPENDENCIES ****\033[0m"
          pip install -r ./script/requirements.txt
      - name: install-test-dependencies
        run: |
          echo -e "\033[1;32m**** INSTALLING TEST DEPENDENCIES ****\033[0m"
          pip install -r ./code_quality/tests/requirements/requirements.txt
      - name: run-integration-tests
        run: |
          echo -e "\033[1;32m**** RUNNING INTEGRATION TESTS ****\033[0m"
          coverage run -m pytest -vv code_quality/tests/integration_tests/* --log-cli-level="${LOG_LEVEL}"
  python-end-to-end-test:
    needs:
      - python-integration-test
    runs-on: ubuntu-latest
    steps:
      - name: checkout-code
        uses: actions/checkout@v4
      - name: set-up-python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: build-virtual-env
        run: |
          echo -e "\033[1;32m**** BUILDING VIRTUAL ENVIRONMENT ****\033[0m"
          python3 -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
      - name: install-project-dependencies
        run: |
          echo -e "\033[1;32m**** INSTALLING PROJECT DEPENDENCIES ****\033[0m"
          pip install -r ./script/requirements.txt
      - name: install-test-dependencies
        run: |
          echo -e "\033[1;32m**** INSTALLING TEST DEPENDENCIES ****\033[0m"
          pip install -r ./code_quality/tests/requirements/requirements.txt
          echo -e "\033[1;32m**** INSTALLING END-TO-END TEST DEPENDENCIES ****\033[0m"
          pip install -r ./code_quality/tests/requirements/end_to_end/requirements.txt
      - name: run-end-to-end-tests
        run: |
          echo -e "\033[1;32m**** RUNNING END-TO-END TESTS ****\033[0m"
          coverage run -m pytest -vv code_quality/tests/end_to_end_tests/* --log-cli-level="${LOG_LEVEL}" && coverage report --omit "code_quality/**/*" --rcfile "${PYPROJECT_PATH}" -m
  
